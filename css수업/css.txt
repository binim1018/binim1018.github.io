[css정의]
html로 마크업 된 구조에 각 요소를 선택하여 디자인을 입히는 것
다양한 선택방식으로 요소를 선택하고 중괄호{}안에 스타일의 속성과 값을 작성한다

[css3에 추가된 기능]
다양한 방식의 선택자 제공
애니메이션
미디어쿼리(반응형웹)

[css로 할 수 있는 작업]
문서의 레이아웃 잡기
다양한 컴포넌트 디자인 *컴포넌트란? http://bootstrapk.com/components/
2D, 3D 애니메이션
반응형웹

[기본문법]
선택자{
    속성:값;
    속성:값;
    속성:값;
    ...
}
*주의점 : 속성 뒤에는 콜론(:)을 넣고 값 뒤에는 세미콜론(;)을 반드시 기입한다.
         작성하지 않을 시 오류가 나므로 주의한다.

[css주석]
/* 주석 내용 작성 */
단축키 ctrl+/

===========================================================================

[선택자의 종류]
1. 전체선택자
   요소를 한꺼번에 선택할 때 사용.
   주로 초기화 작업을 할 때 사용함.
   브라우저마다 기본으로 설정된 css값(특히 여백)이 다르므로
   초기화 설정을 해 주는 것이 필요하다.

   예시) 모든 요소를 선택하고 여백 초기화 하기
   *{
       margin:0; padding:0;
   }
   예시) 특정 부모 요소를 선택하고 하위(후손)에 있는 요소에 공통적인 스타일 주기
   article *{}

2. 요소(태그) 선택자
   요소의 이름으로 선택
   예시) h1{}
         p{}
         li{}

3. 아이디(id) 선택자
   요소에 속성으로 id를 사용할 경우
   id값은 전체 문서의 내용 중 한 번만 사용한다.(중복 불가)    
   id는 전체 문서 중 유일한 구조에 해당되는 요소에만 적용하는 것이 좋다.
   예시)
   #gnb{}
   #search{}

   <nav id="gnb"></gnb>
   <form id="search"></form>

4. 클래스(class) 선택자
   요소에 속성으로 class를 사용할 경우
   전체 문서의 내용에서 반복적으로 사용 가능(중복 허용)
   여러 개의 클래스값을 적용할 수 있다.
   주로 공통적으로 처리해야 할 영역을 클래스 규칙을 작성하여 처리한다.

   예시) 빨간색 글자를 적용하는 규칙 만들기
   .font-red{color:red;}
   예시) 폰트 크기가 20px인 규칙 만들기
   .font20 {font-size:20px;}

   <div>
        <h2 class="font-red font20">제목</h2>
        <p>문장 내용...</p>
   </div>

   <ul>
        <li class="font20">리스트1</li>
        <li class="font-red">리스트1</li>
   </ul>

5. 자식 선택자
   선택한 부모의 자식을 선택할 때 사용
   주로 동일한 구조가 중첩되어 있을 경우 사용한다.
   부모 요소 > 자식 요소 *띄어쓰기 상관없음
   예시) div의 자식 중 p만 선택하기
   div>p

   div 
        p => 선택됨
        section
            p
   
   예시) div의 자식 전체 선택하기
   div>*  =>  p,section 선택됨

6. 후손 선택자
   선택된 부모(조상)의 후손을 선택할 때 사용
   부모(조상)요소 후손요소
   예시) div의 후손 중 p를 모두 선택
   div p

   div 
        p => 선택됨
        section
            p => 선택됨

7. 동위(형제) 선택자
   형제 요소를 선택할 때 사용
   선택자 ~ 형제요소 : 형제요소 선택자와 동일한 위치 '뒤'에 있는 형제 요소를 선택
   선택자 + 형제요소 : 형제요소 선택자와 동일한 위치 바로 '뒤'에 있는 형제요소 하나만 선택
   예시) p의 형제 중 바로 뒤에 있는 section만 선택하기
   p + section
   예시) p의 형제 중 뒤에 있는 section 모두 선택하기
   p ~ section

   div 
        p 
        section
            p
        section
            p 

8. 속성 선택자
   속성과 값으로 선택할 때 사용
   [속성] 속성을 포함
   [속성=값] 속성의 값과 완전히 일치할 경우
   [속성^=값] 속성의 값으로 시작하는 것
   [속성$=값] 속성의 값으로 끝나는 것
   [속성*=값] 속성의 값을 포함하는 것
   [속성~=값] 속성의 값을 포함하는 것(단어만)

   예시)
   [alt="테스트"] => alt가 테스트인 속성과 값을 가지고 있는 요소를 선택
   [src$="jpg"]  => src의 값 중 jpg로 끝나는 요소 선택
   [src^="test"] => src의 값 중 test로 시작하는 요소 선택
   [src*="s"]    => src의 값 중 s를 포함하고 있는 요소 선택
   [src~="tree"] => src의 값 중 tree를 포함하고 있는 요소 선택

   <img src="test.jpg" alt="테스트">
   <img src="test.png" alt="테스트">
   <img src="tree.jpg" alt="나무">

   [type="button"]
   <input type="text">
   <input type="button">
   <input type="radio">

9. 반응/상태 선택자
   요소의 반응, 상태에 따라서 선택하는 경우
   :hover        마우스를 올렸을 때
   :active       마우스를 클릭한 상태
   :visited      사이트를 방문한 상태
   :checked      체크가 된 상태
   :disabled     사용불가능한 상태
   :endisabled   사용가능한 상태(disabled의 반대)
   :read-only    읽기 전용
   :focus        포커스가 적용된 상태
   :target       링크(앵커)의 타겟이 된 상태
   :empty        내용이 없는 상태

   예시)
   <a href="test.html">테스트</a>

   *a링크의 target이 된 div
   *내용이 없는 div
   <a href="#test">테스트</a>
   <div id="test"></div>

   a{color:black;}
   a:hover{color:red;}
   <input type="radio" checked disabled>

10. 구조 선택자 *nth-child / nth-of-type 의 차이 => div 안의 span,p 예시 기억하기
   *여러 개의 요소가 뒤섞여 있지 않고 같은 구조로 연달아 있는 경우 사용
   :first-child                                상위 요소의 하위 요소들 중 첫 번째
   :last-child                                 상위 요소의 하위 요소등 중 마지막
   :nth-child(수열 또는 odd 또는 even)          상위 요소의 하위 요소들 중 앞에서 n번째
   :nth-last-child(수열 또는 odd 또는 even)     상위 요소의 하위 요소들 중 뒤에서 n번째
   :only-child                                 특정 하위 요소를 하나만 포함(다른 요소 포함X)

   태그의 형태를 구분할 경우
   *여러 개의 요소가 뒤섞여 있는 경우 사용
   :first-of-type                              상위 요소의 하위 요소들 중 첫 번째
   :last-of-type                               상위 요소의 하위 요소등 중 마지막
   :nth-of-type(수열|odd|even)                 상위 요소의 하위 요소들 중 앞에서 n번째
   :nth-last-of-type(수열|odd|even)            상위 요소의 하위 요소들 중 뒤에서 n번째
   :only-of-type                               특정 하위 요소를 하나만 포함(다른 요소 포함O)

   예시)
   ul li:first-child{} *허용 ul :first-child{}
   ul li:last-child{}
   ul li:nth-child(2){} 2번째 li
   ul li:nth-child(2n){}  2의 배수 선택
   ul li:nth-child(2n-1){} 홀수 선택
   ul li:nth-child(even){} 짝수 선택
   ul li:nth-child(odd){} 홀수 선택

   ul
      li
      li
      li

   div p:only-child{}
   div
      p
      div

   div
      p
      p

   div
      p => p 하나만 포함됐으므로 선택

11. 문자 선택자
   ::first-letter   요소의 첫 번째 문자
   ::first-line     요소의 첫 번째 줄
   ::before         요소의 내용 앞 <*중요> 가상의 공간을 만든다.
   ::after          요소의 내용 뒤 <*중요>
   ::selection      문자를 드래그 해서 선택할 때

12. 부정 선택자
   :not(선택자) 선택자가 아닌 것을 선택

13. 기타 선택자
   -여러 개의 선택자를 동시에 선택
   중복되는 속성과 값의 경우 해당되는 선택자를 쉼표(,)를 사용하여 선택

   예시)
   h1{color:red;}
   h2{color:red;}
   p{color:red;}
   h1,h2,p{color:red;}

   -복합적으로 선택하기
   선택자의 종류를 복합적으로 사용하여 선택하는 것
   주로 복잡한 구조로 되어 있는 경우에 많이 사용한다.

   예시)
   *태그 뒤 띄어쓰기 없이 클래스/아이디명이 있는 경우 그 태그 본인의 이름임
   div.demo > h1 span + a{color:red;}
   위의 내용을 글로 풀어서 써보기
   => demo 클래스명을 가진 div의 자식 태그 h1 하위 span의 형제 요소 중 바로 뒤에 있는 a 색상을 red로 하기 

   구조를 만들어 보기
   =>
   <div class="demo">
        <h1> 제목
            <span></span>
            <a>텍스트</a>   => '텍스트' 컬러의 색이 red가 됨
            <span></span>
        </h1> 
   </div>
   <div>...</div>

   예시)
   #list ul li:hover a .active{color:red;}

   위의 내용을 글로 써 보기
   =>
   list라는 아이디명을 가진 태그의 후손 중 ul 후손 li들을 선택하고 마우스를 갖다 댔을 때 
   a의 후손 중 active 클래스명을 가진 요소의 색이 red 적용
   
   구조를 만들어 보기
   =>
   <div id="list">
        <ul>
            <li> 리스트1
                <a href="#"><b class="active">여기</b>를 클릭하세요.</a>
            </li>
            <li> 리스트2
                <a href="#"><b class="active">여기</b>를 클릭하세요.</a>
            </li>
            <li> 리스트3
                <a href="#"><b class="active">여기</b>를 클릭하세요.</a>
            </li>
        </ul>
   </div>

   예시)
   ul#list li:hover a.active{color:red;}

   위의 내용을 글로 써 보기
   => ul 중 아이디가 list인 요소를 선택 후 후손 li에 마우스를 올렸을 때
   li의 후손 a 중 클래스가 active인 요소를 최종 선택하여 글자색 빨간 색 적용

   구조를 만들어 보기
   =>
   
   <ul id="list">
        <li>리스트1<a href="#" class="active">링크</a></li>
        <li>리스트2<a href="#">링크</a></li>
        <li>리스트3<a href="#">링크</a></li>
    </ul>
    <ul id="sns">
        <li>sns1</li>
        <li>sns2</li>
    </ul>
